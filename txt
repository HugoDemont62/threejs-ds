import * as THREE from 'three';
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';
import { FontLoader } from 'three/examples/jsm/loaders/FontLoader';
import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';
import { CSS3DObject, CSS3DRenderer } from 'three/examples/jsm/renderers/CSS3DRenderer.js';

const scene = new THREE.Scene();
scene.background = new THREE.CubeTextureLoader().setPath('https://sbcode.net/img/').load(['px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png']);

const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
camera.position.z = 1;

const light = new THREE.PointLight(0xffffff, 250, 10);
light.position.set(0, 5, -5);
scene.add(light);

const renderer = new CSS3DRenderer();
renderer.setSize(window.innerWidth, window.innerHeight);
document.body.appendChild(renderer.domElement);

const controls = new OrbitControls(camera, renderer.domElement);

const iframe = document.createElement('iframe');
iframe.src = "http://www.iut-lens.univ-artois.fr/";
iframe.style.width = '1280px';
iframe.style.height = '768px';
iframe.style.border = '0';
iframe.style.backfaceVisibility = 'hidden';
iframe.style.overflowY = 'scroll';

const cssObject = new CSS3DObject(iframe);

cssObject.position.set(0, 2.6, -3.8);
cssObject.scale.set(0.0055, 0.0055, 0.0055);
cssObject.rotation.y = -0.36;

scene.add(cssObject);

const loader = new GLTFLoader();
loader.load('/models/laptop.glb', function (gltf) {
  const computer = gltf.scene;
  scene.add(computer);
});

const tabletopGeometry = new THREE.BoxGeometry(20, 0.5, 10);
const tabletopMaterial = new THREE.MeshStandardMaterial({color: 0x808080, roughness: 0.5, metalness: 0.1});
const tabletop = new THREE.Mesh(tabletopGeometry, tabletopMaterial);
tabletop.position.set(0, 0, 0);
scene.add(tabletop);

const legGeometry = new THREE.CylinderGeometry(0.5, 0.5, 12, 32);
const legMaterial = new THREE.MeshStandardMaterial({color: 0x808080, roughness: 0.1, metalness: 0.8});

const legPositions = [
  {x: -9, z: -4, y: -6},
  {x: 9, z: -4, y: -6},
  {x: -9, z: 4, y: -6},
  {x: 9, z: 4, y: -6},
];

for (const {x, z, y} of legPositions) {
  const leg = new THREE.Mesh(legGeometry, legMaterial);
  leg.position.set(x,  y, z,);
  scene.add(leg);
}

const lampGeometry = new THREE.CylinderGeometry(0.5, 0.5, 2, 32);
const lampMaterial = new THREE.MeshStandardMaterial({color: 0x333333, roughness: 0.3, metalness: 0.65});
const lamp = new THREE.Mesh(lampGeometry, lampMaterial);
scene.add(lamp);

const fontLoader = new FontLoader();
fontLoader.load('/fonts/HaarlemDeco.ttf', function (font) {
  const textShapes = font.generateShapes('IUT de Lens', 2);
  const textGeometry = new THREE.ShapeGeometry(textShapes);
  textGeometry.computeBoundingBox();
  const textMaterial = new THREE.MeshStandardMaterial({color: 0xFF55DD, roughness: 0.5, metalness: 0.1});
  const text = new THREE.Mesh(textGeometry, textMaterial);
  scene.add(text);
});

function animate() {
  requestAnimationFrame(animate);
  controls.update();
  renderer.render(scene, camera);
}

animate();